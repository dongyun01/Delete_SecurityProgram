using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using WindowsInstaller;
using Microsoft.Win32;
using System.Management;

//ver 1.0.0 보안프로그램 제거기

namespace WindowsFormsApp1
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, EventArgs e)
        {

            listBox1.Items.Clear();
            RegistryKey unInstallkey = Registry.LocalMachine.OpenSubKey(@"Software\Microsoft\Windows\CurrentVersion\Uninstall"); // 읽기전용으로 레지스트리 키검색
            RegistryKey temp = null; // 키 검색용

            string path = string.Empty; // 경로지정

            string displayName = string.Empty; // 디스플레이할 이름 ( 디스플레이 되어져있는 이름 )

            string[] subkeyLists = unInstallkey.GetSubKeyNames(); // 키 이름 저장

            foreach (string subkey in subkeyLists)

            {

                path = @"Software\Microsoft\Windows\CurrentVersion\Uninstall\" + subkey; // 경로 지정

                temp = Registry.LocalMachine.OpenSubKey(path); // 경로에 해당하는 키 배정

                if (temp != null)

                {
                    displayName = (string)temp.GetValue("DisplayName"); // 디스플레이 이름 값 

                    if (displayName != null && (displayName.Contains("NTSMag") || displayName.Contains("EPK") || displayName.Contains("Tru") ||
                        displayName.Contains("Unip") || displayName.Contains("SoftCa") || displayName.Contains("한컴시") || displayName.Contains("AhnLab") ||
                        displayName.Contains("CROSSCERT") || displayName.Contains("VestCert") || displayName.Contains("Delfino") || displayName.Contains("Veraport") ||
                        displayName.Contains("WIZVERA") || displayName.Contains("INIS") || displayName.Contains("Mag") || displayName.Contains("Fin") ||
                        displayName.Contains("FSW") || displayName.Contains("inno") || displayName.Contains("DRM") || displayName.Contains("KTBre") ||
                        displayName.Contains("kcp") || displayName.Contains("VPWal") || displayName.Contains("APS") || displayName.Contains("Touch") ||
                        displayName.Contains("espi") || displayName.Contains("sswsc") || displayName.Contains("MaWeb") || displayName.Contains("Xec") ||
                        displayName.Contains("HSRoam") 
                        //수정사항 추가 displayName.Contains("@") 복사용 포함되는 단어 존재시 검색
                        ))
                        listBox1.Items.Add(displayName); // 목록에 추가

                }
            }
        }

        private void button2_Click(object sender, EventArgs e)
        {
            if (listBox1.SelectedItem == null)
            {
                MessageBox.Show("목록 선택오류", "선택된 목록이 없습니다.");
            }
            else
            {
                RegistryKey unInstallkey = Registry.LocalMachine.CreateSubKey(@"Software\Microsoft\Windows\CurrentVersion\Uninstall");
                RegistryKey temp = null;

                string path = string.Empty;

                string displayName = string.Empty;

                string[] subkeyLists = unInstallkey.GetSubKeyNames();

                foreach (string subkey in subkeyLists)

                {

                    path = @"Software\Microsoft\Windows\CurrentVersion\Uninstall\" + subkey;

                    temp = Registry.LocalMachine.CreateSubKey(path);

                    if (temp != null)
                    {
                        Registry.LocalMachine.DeleteSubKey(path);
                    }
                }
            }
        }
    }
}

--
//백업본

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using WindowsInstaller;
using Microsoft.Win32;
using System.Management;
using System.Diagnostics;

//ver 1.0.0 보안프로그램 제거기

namespace WindowsFormsApp1
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void button1_Click(object sender, EventArgs e)
        {

            listBox1.Items.Clear();
            RegistryKey unInstallkey = Registry.LocalMachine.OpenSubKey(@"Software\Microsoft\Windows\CurrentVersion\Uninstall"); // 읽기전용으로 레지스트리 키검색
            RegistryKey temp = null; // 키 검색용

            string path = string.Empty; // 경로지정

            string displayName = string.Empty; // 디스플레이할 이름 ( 디스플레이 되어져있는 이름 )

            string[] subkeyLists = unInstallkey.GetSubKeyNames(); // 키 이름 저장

            foreach (string subkey in subkeyLists)

            {

                path = @"Software\Microsoft\Windows\CurrentVersion\Uninstall\" + subkey; // 경로 지정

                temp = Registry.LocalMachine.OpenSubKey(path); // 경로에 해당하는 키 배정

                if (temp != null)

                {
                    displayName = (string)temp.GetValue("DisplayName"); // 디스플레이 이름 값 

                    if (displayName != null && (displayName.Contains("NTSMag") || displayName.Contains("EPK") || displayName.Contains("Tru") ||
                        displayName.Contains("Unip") || displayName.Contains("SoftCa") || displayName.Contains("한컴시") || displayName.Contains("AhnLab") ||
                        displayName.Contains("CROSSCERT") || displayName.Contains("VestCert") || displayName.Contains("Delfino") || displayName.Contains("Veraport") ||
                        displayName.Contains("WIZVERA") || displayName.Contains("INIS") || displayName.Contains("Mag") || displayName.Contains("Fin") ||
                        displayName.Contains("FSW") || displayName.Contains("inno") || displayName.Contains("DRM") || displayName.Contains("KTBre") ||
                        displayName.Contains("kcp") || displayName.Contains("VPWal") || displayName.Contains("APS") || displayName.Contains("Touch") ||
                        displayName.Contains("espi") || displayName.Contains("sswsc") || displayName.Contains("MaWeb") || displayName.Contains("Xec") ||
                        displayName.Contains("HSRoam") || displayName.Contains("KCase")
                        //수정사항 추가 displayName.Contains("@") 복사용 포함되는 단어 존재시 검색
                        ))
                        listBox1.Items.Add(displayName); // 목록에 추가

                }
            }
        }
        public string UninstallCommand(string temp)
        {
            return temp;
        }
        private void button2_Click(object sender, EventArgs e)
        {
            if (listBox1.SelectedItem == null)
            {
                MessageBox.Show("목록 선택오류", "선택된 목록이 없습니다.");
            }
            else
            {
                RegistryKey unInstallkey = Registry.LocalMachine.CreateSubKey(@"Software\Microsoft\Windows\CurrentVersion\Uninstall");
                RegistryKey temp = null;

                string path = string.Empty;

                string displayName = string.Empty;

                string[] subkeyLists = unInstallkey.GetSubKeyNames();

                foreach (string subkey in subkeyLists)

                {

                    path = @"Software\Microsoft\Windows\CurrentVersion\Uninstall\" + subkey;

                    temp = Registry.LocalMachine.CreateSubKey(path, true);

                    if (temp != null)
                    {
                        Process.Start((string)temp.GetValue("UninstallString"));

                    }
                }
            }
        }
    }
}

// 백업 백업 백업 백업 백업 백업 백업 백업 백업 백업 백업 백업 백업 백업 백업 백업 백업 백업 백업